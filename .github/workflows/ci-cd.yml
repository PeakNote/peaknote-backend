name: CI/CD Pipeline

on:
  push:
  pull_request:

jobs:
  test:
    runs-on: ubuntu-latest

    services:
      mysql:
        image: mysql:8.0
        env:
          MYSQL_ROOT_PASSWORD: 123456
          MYSQL_DATABASE: peaknote
        ports:
          - 3306:3306
        options: >-
          --health-cmd="mysqladmin ping -h localhost"
          --health-interval=10s
          --health-timeout=5s
          --health-retries=5

      redis:
        image: redis:7
        ports:
          - 6379:6379
        options: >-
          --health-cmd="redis-cli ping"
          --health-interval=10s
          --health-timeout=5s
          --health-retries=5

      rabbitmq:
        image: rabbitmq:3-management
        env:
          RABBITMQ_DEFAULT_USER: guest
          RABBITMQ_DEFAULT_PASS: guest
        ports:
          - 5672:5672
          - 15672:15672
        options: >-
          --health-cmd="rabbitmqctl status"
          --health-interval=10s
          --health-timeout=5s
          --health-retries=5

    steps:
    - uses: actions/checkout@v4

    - name: Set up JDK 17
      uses: actions/setup-java@v4
      with:
        java-version: '17'
        distribution: 'temurin'

    - name: Cache Maven dependencies
      uses: actions/cache@v4
      with:
        path: ~/.m2
        key: ${{ runner.os }}-m2-${{ hashFiles('**/pom.xml') }}
        restore-keys: ${{ runner.os }}-m2

    - name: Install Redis & RabbitMQ CLI tools
      run: |
        sudo apt-get update
        sudo apt-get install -y redis-tools rabbitmq-server

    - name: Wait for services to be ready
      run: |
        timeout 60 bash -c 'until mysqladmin ping -h 127.0.0.1 --silent; do sleep 1; done'
        timeout 60 bash -c 'until redis-cli -h 127.0.0.1 ping | grep PONG; do sleep 1; done'
        timeout 60 bash -c 'until rabbitmqctl -n rabbit@localhost status; do sleep 1; done'

    - name: Run tests
      run: ./mvnw clean test

    - name: Build with Maven
      run: ./mvnw clean compile

  build:
    needs: test
    runs-on: ubuntu-latest
    if: github.ref == 'refs/heads/main'

    steps:
    - uses: actions/checkout@v4

    - name: Set up JDK 17
      uses: actions/setup-java@v4
      with:
        java-version: '17'
        distribution: 'temurin'

    - name: Cache Maven dependencies
      uses: actions/cache@v4
      with:
        path: ~/.m2
        key: ${{ runner.os }}-m2-${{ hashFiles('**/pom.xml') }}
        restore-keys: ${{ runner.os }}-m2

    - name: Build JAR
      run: ./mvnw clean package -DskipTests

    - name: Build Docker image
      run: |
        docker build -t peaknote-backend:${{ github.sha }} .
        docker tag peaknote-backend:${{ github.sha }} peaknote-backend:latest

    - name: Upload build artifacts
      uses: actions/upload-artifact@v4
      with:
        name: jar-artifact
        path: target/*.jar
